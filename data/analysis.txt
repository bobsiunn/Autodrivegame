[{
    'detection': {
        'box': tensor([
            [ 7.4166e-01,  4.9981e-01,  7.7766e-01,  5.6010e-01],
            [ 4.9223e-01,  5.2062e-01,  5.2559e-01,  5.5663e-01],
            [ 4.4243e-01,  5.2377e-01,  4.7496e-01,  5.4479e-01],
            [ 4.5401e-01,  5.2332e-01,  4.8255e-01,  5.4357e-01],
            [ 5.5030e-01,  5.0157e-01,  5.8657e-01,  5.5895e-01],
            [ 6.0537e-01,  4.1589e-01,  6.2147e-01,  4.3808e-01],
            [ 5.5030e-01,  5.0157e-01,  5.8657e-01,  5.5895e-01],
            ...,
            [ 2.3155e-01,  5.2514e-01,  2.5165e-01,  5.4038e-01],
            [ 6.1829e-01,  4.0989e-01,  6.3483e-01,  4.2452e-01],
            [ 3.6096e-01,  5.2206e-01,  3.8247e-01,  5.3951e-01],
            [ 6.9744e-01,  4.1847e-01,  7.0596e-01,  4.6253e-01],
            [ 6.9693e-01,  3.5861e-01,  7.1202e-01,  3.8097e-01],
            [ 3.8859e-02,  5.0349e-01,  5.4286e-02,  5.2926e-01],
            [ 6.7088e-01,  4.6364e-01,  6.7925e-01,  4.7685e-01]
        ]),
        'mask': tensor([
            [ 0.2177, -0.7096,  0.7063,  ...,  0.1534,  0.5878, -0.9038], 
            [ 0.9965, -0.9414, -0.9508,  ..., -0.1659,  0.8487, -0.9270], 
            [ 0.9957, -0.9788, -0.9469,  ...,  0.8941,  0.1024, -0.6263],
            ...,
            [ 0.9438, -0.9778, -0.2978,  ..., -0.7723,  0.8370,  0.4228],
            [ 0.9241, -0.9623, -0.3645,  ...,  0.1969,  0.9263,  0.0956],
            [ 0.8846, -0.9630,  0.0065,  ...,  0.1580,  0.6348,  0.8361]
        ])
        'class': tensor(
            [ 0,  2,  2,  2,  7,  9,  5,  2,  9,  2,  2,  2,  9,  9,  7,  2,  7,  2,  9,  9,  9,  2, 64,  9,  2,  9,  5,  9,  9,  9,  2,  9,  2,  9,  2,  2,   9,  9,  9,  9,  9,  9,  0,  9,  9,  9,  2,  7,  9,  9,  9,  2,  9,  9,   9,  9,  9,  5,  7,  0,  7,  9, 62,  9,  9,  9,  9,  9,  2,  9,  9,  9,   2,  9,  9,  9,  0,  9,  2,  7,  9,  2,  2,  7,  9,  9,  9,  9,  9,  9,   9,  2,  9,  9,  9,  2,  9,  9,  9,  9]
        ), 
        'score': tensor(
            [0.6804, 0.6713, 0.6563, 0.6130, 0.5716, 0.4789, 0.3531, 0.3369, 0.3331,    0.3089, 0.2922, 0.2624, 0.2237, 0.1964, 0.1894, 0.1837, 0.1709, 0.1630,  0.1548, 0.1416, 0.1358, 0.1280, 0.1245, 0.1232, 0.1229, 0.1193, 0.1091,  0.1089, 0.0977, 0.0968, 0.0903, 0.0884, 0.0883, 0.0863, 0.0798, 0.0788,  0.0784, 0.0782, 0.0781, 0.0746, 0.0742, 0.0737, 0.0731, 0.0728, 0.0725,  0.0716, 0.0708, 0.0707, 0.0671, 0.0666, 0.0663, 0.0663, 0.0658, 0.0649,  0.0649, 0.0646, 0.0645, 0.0642, 0.0642, 0.0639, 0.0632, 0.0628, 0.0621,  0.0617, 0.0615, 0.0609, 0.0603, 0.0602, 0.0602, 0.0598, 0.0597, 0.0594,  0.0591, 0.0590, 0.0587, 0.0582, 0.0575, 0.0571, 0.0566, 0.0564, 0.0562,  0.0558, 0.0558, 0.0558, 0.0558, 0.0557, 0.0554, 0.0553, 0.0553, 0.0552,  0.0548, 0.0545, 0.0541, 0.0539, 0.0537, 0.0536, 0.0536, 0.0535, 0.0534,  0.0529]
        ),
        'proto': tensor([
            [
                [0.5454, 0.9887, 0.0000,  ..., 0.3596, 0.3786, 0.6537],
                [0.6273, 1.1725, 0.0000,  ..., 0.4739, 0.4842, 0.8826],
                [0.6370, 1.1357, 0.0000,  ..., 0.4838, 0.4900, 0.9200],
                ...,
                [0.6927, 1.0738, 0.0000,  ..., 0.5003, 0.5476, 0.9083],
                [0.6787, 1.0028, 0.0000,  ..., 0.4349, 0.4986, 0.8264],
                [0.6007, 0.7989, 0.0140,  ..., 0.2913, 0.3922, 0.5932]],
                [[0.6656, 1.4440, 0.0000,  ..., 0.5771, 0.6347, 0.9601],
                [0.7884, 1.7042, 0.0000,  ..., 0.6948, 0.8621, 1.3109],
                [0.7351, 1.6642, 0.0000,  ..., 0.6442, 0.8832, 1.3597],
                ...,
                [0.8818, 1.3874, 0.0000,  ..., 0.7244, 0.8206, 1.1493],
                [0.8738, 1.1894, 0.0000,  ..., 0.5765, 0.7163, 0.9942],
                [0.7696, 0.8359, 0.0000,  ..., 0.3443, 0.5045, 0.6323]],
                [[0.7569, 1.6052, 0.0000,  ..., 0.7116, 0.8187, 1.1050],
                [0.9340, 1.8292, 0.0000,  ..., 0.7945, 1.0146, 1.4674],
                [0.9156, 1.6641, 0.0000,  ..., 0.6388, 0.9893, 1.3851],
                ...,
                [0.9571, 1.4675, 0.0000,  ..., 0.9144, 0.9844, 1.3009],
                [0.9561, 1.1868, 0.0000,  ..., 0.7116, 0.8235, 1.0389],
                [0.8393, 0.6921, 0.0000,  ..., 0.3676, 0.5039, 0.5159]],
                ...,
                [[1.0052, 1.1700, 0.0000,  ..., 0.3033, 0.3321, 1.1511],
                [1.1689, 1.3580, 0.0000,  ..., 0.2674, 0.3234, 1.5990],
                [1.1079, 1.2391, 0.0000,  ..., 0.1717, 0.2668, 1.4076],
                ...,
                [1.1034, 1.1525, 0.0000,  ..., 0.5274, 0.0628, 1.6581],
                [1.0861, 1.1336, 0.0000,  ..., 0.5500, 0.0784, 1.4962],
                [0.8709, 0.9960, 0.0000,  ..., 0.4890, 0.0524, 1.0102]],
                [[0.9198, 0.9942, 0.0000,  ..., 0.2869, 0.3549, 0.9432],
                [1.0555, 1.1858, 0.0000,  ..., 0.2508, 0.4170, 1.4275],
                [1.0042, 1.2024, 0.0000,  ..., 0.1938, 0.4062, 1.4860],
                ...,
                [1.0450, 0.9747, 0.0000,  ..., 0.6172, 0.1446, 1.2995],
                [1.0170, 0.9505, 0.0000,  ..., 0.5811, 0.1450, 1.1266],
                [0.8038, 0.8148, 0.0000,  ..., 0.4681, 0.0801, 0.7265]],
                [[0.7620, 0.7611, 0.0000,  ..., 0.2461, 0.3009, 0.7199],
                [0.9046, 0.8653, 0.0000,  ..., 0.2499, 0.3812, 1.0727],
                [0.9220, 0.9068, 0.0000,  ..., 0.2278, 0.4238, 1.1624],
                ...,
                [0.9049, 0.9615, 0.0000,  ..., 0.6248, 0.1652, 1.0054],
                [0.8713, 0.9092, 0.0000,  ..., 0.5540, 0.1943, 0.8611],
                [0.6948, 0.6983, 0.0000,  ..., 0.3934, 0.1513, 0.5312]
            ]
        ])
    }, 
    
    'net': Yolact(
        (backbone): ResNetBackbone(      
            (layers): ModuleList(
                (0): Sequential(
                    (0): Bottleneck(
                        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)   
                        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False) 
                        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True) 
                        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)  
                        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                        (downsample): Sequential(
                            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)      
                            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                            )
                        )
                
                    (1): Bottleneck(
                        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)  
                        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)      
                        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)      
                        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)      
                        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False) 
                        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     
                        (relu): ReLU(inplace=True)
                    )
                    (2): Bottleneck(
                        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)  
                        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)      
                        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)      
                        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)      
                        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)  
                        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     
                        (relu): ReLU(inplace=True)
                    )     
                )       
                (1): Sequential(
                    (0): Bottleneck(
                        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                        (downsample): Sequential(
                            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        )
                    )
                    (1): Bottleneck(
                        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (2): Bottleneck(
                        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (3): Bottleneck(
                        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                )
                (2): Sequential(
                    (0): Bottleneck(
                        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                        (downsample): Sequential(
                            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
                            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        )
                    )
                    (1): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (2): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (3): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (4): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (5): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (6): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (7): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (8): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (9): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (10): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (11): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (12): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (13): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (14): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (15): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (16): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (17): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (18): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (19): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (20): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (21): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (22): Bottleneck(
                        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                )
                (3): Sequential(
                    (0): Bottleneck(
                        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                        (downsample): Sequential(
                            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)   
                            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        )
                    )
                    (1): Bottleneck(
                        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                    (2): Bottleneck(
                        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                        (relu): ReLU(inplace=True)
                    )
                )
            )
            (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)     
            (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
        )

        (proto_net): Sequential(
            (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): ReLU(inplace=True)
            (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (5): ReLU(inplace=True)
            (6): InterpolateModule()
            (7): ReLU(inplace=True)
            (8): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (9): ReLU(inplace=True)
            (10): Conv2d(256, 32, kernel_size=(1, 1), stride=(1, 1))
        )
        
        (fpn): FPN(
            (lat_layers): RecursiveScriptModule(
                original_name=ModuleList
                (0): RecursiveScriptModule(original_name=Conv2d)
                (1): RecursiveScriptModule(original_name=Conv2d)
                (2): RecursiveScriptModule(original_name=Conv2d)
            )
            (pred_layers): RecursiveScriptModule(
                original_name=ModuleList
                (0): RecursiveScriptModule(original_name=Conv2d)
                (1): RecursiveScriptModule(original_name=Conv2d)
                (2): RecursiveScriptModule(original_name=Conv2d)
            )
            (downsample_layers): RecursiveScriptModule(
                original_name=ModuleList
                (0): RecursiveScriptModule(original_name=Conv2d)
                (1): RecursiveScriptModule(original_name=Conv2d)
            )
        )
        (prediction_layers): ModuleList(
            (0): PredictionModule(
                (upfeature): Sequential(
                    (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                    (1): ReLU(inplace=True)
                )
                (bbox_layer): Conv2d(256, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (conf_layer): Conv2d(256, 243, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (mask_layer): Conv2d(256, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (1): PredictionModule()
            (2): PredictionModule()
            (3): PredictionModule()
            (4): PredictionModule()
        )
        (semantic_seg_conv): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
}]